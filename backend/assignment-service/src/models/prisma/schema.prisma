// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["multiSchema"]
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRESQL_DB_URL")
    schemas  = ["assignments", "users"]
}

model Assignment {
    id          String   @id @default(cuid())
    title       String
    deadline    DateTime
    description String?
    isPublished Boolean  @default(false)

    numberOfQuestions Int        @default(0)
    questions         Question[]

    // string for now, will be replaced by user model
    authors Int[]

    createdOn DateTime @default(now())
    updatedOn DateTime @updatedAt

    @@schema("assignments")
}

model Question {
    id          String   @id @default(cuid())
    title       String
    // description should contain all the details of the question, including examples, constraints, images, etc.
    description String
    deadline    DateTime

    referenceSolutionId String?
    referenceSolution   ReferenceSolution?

    numberOfTestCases Int        @default(0)
    testCases         TestCase[]

    Assignment   Assignment? @relation(fields: [assignmentId], references: [id], onDelete: Cascade)
    assignmentId String?

    createdOn DateTime @default(now())

    @@schema("assignments")
}

model TestCase {
    id         String   @id @default(cuid())
    questionId String
    question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

    input  String
    output String

    isPublic Boolean @default(true)

    @@schema("assignments")
}

model ReferenceSolution {
    id String @id @default(cuid())

    language   String
    code       String
    codeParser String?

    questionId String   @unique
    question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

    @@schema("assignments")
}

// User Schema
model User {
    uid Int @id @default(autoincrement())

    name   String
    email  String  @unique
    major  String
    course String?

    password String

    role String

    @@schema("users")
}
