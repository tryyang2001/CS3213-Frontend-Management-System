apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress3
  namespace: ingress-nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  rules:
  - http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 3000
      - path: /(user/.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: users
            port:
              number: 3001
      - path: /(assignment/api/.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: assignment
            port:
              number: 8080
      - path: /(grading/api/.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: grading
            port:
              number: 8088
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: ingress-nginx
spec:
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: frontend
        image: fmdevsimgs.azurecr.io/cs3213-frontend
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: ingress-nginx
spec:
  ports:
  - name: http
    port: 3001
    targetPort: 3001
  selector:
    app: users
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      labels:
        app: users
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: users
        image: fmdevsimgs.azurecr.io/cs3213-user
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: assignment
  namespace: ingress-nginx
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: assignment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: assignment
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assignment
  template:
    metadata:
      labels:
        app: assignment
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: assignment
        image: fmdevsimgs.azurecr.io/cs3213-assignment
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: grading
  namespace: ingress-nginx
spec:
  ports:
  - name: http
    port: 8088
    targetPort: 8088
  selector:
    app: grading
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grading
  namespace: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grading
  template:
    metadata:
      labels:
        app: grading
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: grading
        image: fmdevsimgs.azurecr.io/cs3213-grading
        imagePullPolicy: Always
        ports:
        - containerPort: 8088